{"version":3,"file":"static/js/251.9d18144d.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.jsx","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"NameEditor\":\"ContactForm_NameEditor__aCqK7\",\"NameEditor__button\":\"ContactForm_NameEditor__button__yC8Jp\"};","export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter.filter;","import React from 'react';\nimport { useState } from 'react';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { getContacts } from 'redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const items = useSelector(getContacts);\n\n  const handleChangeName = e => {\n    const { value } = e.target;\n    setName(value);\n  };\n\n  const handleChangeNumber = e => {\n    const { value } = e.target;\n    setNumber(value);\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n      const contactsLists = [...items];\n    if (contactsLists.findIndex(contact => name === contact.name) !== -1) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      dispatch(addContact({ name: name, phone: number }));\n    }\n\n    form.reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleFormSubmit}>\n      <label className={css.formLabel}>Name </label>\n      <input\n        className={css.formName}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        placeholder=\"Enter name\"\n        value={name}\n        onChange={handleChangeName}\n      />\n      <label className={css.formLabel}>Number </label>\n      <input\n        className={css.formNumber}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        placeholder=\"Enter phone number\"\n        value={number}\n        onChange={handleChangeNumber}\n      />\n      <button className={css.formBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\n","// extracted by mini-css-extract-plugin\nexport default {};","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { getContacts, getFilter } from '../../redux/contacts/selectors';\nimport css from './ContactList.module.css';\n\nconst getVisibleContacts = (contacts, filter) => {\n  if (!filter) {\n    return contacts;\n  } else {\n    return contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(filter.toLowerCase());\n    });\n  }\n};\n\nexport const ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const visibleContacts = getVisibleContacts(contacts, filter);\n\n  const dispatch = useDispatch();\n  const handleDelete = id => dispatch(deleteContact(id));\n\n  return (\n    <div>\n      <ul>\n        {visibleContacts.map((contact, id) => (\n          <li key={id} className={css.contactListItem}>\n            {contact.name}: {contact.phone}\n            <button\n              type=\"button\"\n             \n              onClick={() => handleDelete(contact.id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};","\nimport './Filter.module.css';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const handleChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <div>\n      <label>Find contacts by Name </label>\n      <input\n       \n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter filter\"\n        value={filter}\n        onChange={handleChange}\n      />\n    </div>\n  );\n};","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Helmet } from \"react-helmet\";\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { ContactForm } from '../components/ContactForm/ContactForm.jsx';\nimport { ContactList } from '../components/ContactList/ContactList.jsx';\nimport { Filter } from '../components/Filter/Filter.jsx';\nimport {getIsLoading } from \"redux/contacts/selectors\";\nimport {Loader} from '../components/Loader/Loader.jsx';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  \n \n\n \n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return ( \n    <section>\n       <Helmet>\n      <title>Phonebook</title>\n      </Helmet>\n      <ContactForm /> \n      <div>{isLoading && <Loader/>}</div>     \n      <Filter/>\n      <ContactList/>\n    </section>\n  );\n};"],"names":["getContacts","state","contacts","items","getIsLoading","isLoading","getFilter","filter","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","className","css","onSubmit","e","preventDefault","form","currentTarget","findIndex","contact","alert","addContact","phone","reset","type","pattern","title","required","placeholder","value","onChange","target","ContactList","visibleContacts","toLowerCase","includes","getVisibleContacts","map","id","onClick","deleteContact","handleDelete","Filter","setFilter","Contacts","useEffect","fetchContacts","Helmet","Loader"],"sourceRoot":""}